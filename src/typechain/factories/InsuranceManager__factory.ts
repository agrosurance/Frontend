/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  InsuranceManager,
  InsuranceManagerInterface,
} from "../InsuranceManager";

const _abi = [
  {
    type: "constructor",
    payable: false,
    inputs: [
      {
        type: "string",
        name: "_insurancePremiumCalculatorCode",
      },
      {
        type: "address",
        name: "_landsContract",
      },
      {
        type: "address",
        name: "_fundManager",
      },
      {
        type: "address",
        name: "oracle",
      },
    ],
  },
  {
    type: "error",
    name: "AlreadyInsured",
    inputs: [],
  },
  {
    type: "error",
    name: "EmptyArgs",
    inputs: [],
  },
  {
    type: "error",
    name: "EmptySecrets",
    inputs: [],
  },
  {
    type: "error",
    name: "EmptySource",
    inputs: [],
  },
  {
    type: "error",
    name: "IncorrectPremium",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidRequest",
    inputs: [],
  },
  {
    type: "error",
    name: "NoCropFound",
    inputs: [],
  },
  {
    type: "error",
    name: "NoInlineSecrets",
    inputs: [],
  },
  {
    type: "error",
    name: "QuotesExpired",
    inputs: [],
  },
  {
    type: "error",
    name: "RequestIsAlreadyPending",
    inputs: [],
  },
  {
    type: "error",
    name: "RequestIsNotPending",
    inputs: [],
  },
  {
    type: "error",
    name: "RequestNotFulfilled",
    inputs: [],
  },
  {
    type: "error",
    name: "SenderIsNotRegistry",
    inputs: [],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
  {
    type: "event",
    anonymous: false,
    name: "OwnershipTransferRequested",
    inputs: [
      {
        type: "address",
        name: "from",
        indexed: true,
      },
      {
        type: "address",
        name: "to",
        indexed: true,
      },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "OwnershipTransferred",
    inputs: [
      {
        type: "address",
        name: "from",
        indexed: true,
      },
      {
        type: "address",
        name: "to",
        indexed: true,
      },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "RequestFulfilled",
    inputs: [
      {
        type: "bytes32",
        name: "id",
        indexed: true,
      },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "RequestSent",
    inputs: [
      {
        type: "bytes32",
        name: "id",
        indexed: true,
      },
    ],
  },
  {
    type: "function",
    name: "acceptOwnership",
    constant: false,
    payable: false,
    gas: 29000000,
    inputs: [],
    outputs: [],
  },
  {
    type: "function",
    name: "addSimulatedRequestId",
    constant: false,
    payable: false,
    gas: 29000000,
    inputs: [
      {
        type: "address",
        name: "oracleAddress",
      },
      {
        type: "bytes32",
        name: "requestId",
      },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "buyInsurance",
    constant: false,
    stateMutability: "payable",
    payable: true,
    gas: 29000000,
    inputs: [
      {
        type: "bytes32",
        name: "requestId",
      },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "chainlinkFunctionGasLimit",
    constant: true,
    stateMutability: "view",
    payable: false,
    gas: 29000000,
    inputs: [],
    outputs: [
      {
        type: "uint32",
      },
    ],
  },
  {
    type: "function",
    name: "chainlinkSubscriptionId",
    constant: true,
    stateMutability: "view",
    payable: false,
    gas: 29000000,
    inputs: [],
    outputs: [
      {
        type: "uint64",
      },
    ],
  },
  {
    type: "function",
    name: "checkInsuranceStatusCode",
    constant: true,
    stateMutability: "view",
    payable: false,
    gas: 29000000,
    inputs: [],
    outputs: [
      {
        type: "string",
      },
    ],
  },
  {
    type: "function",
    name: "claim",
    constant: false,
    payable: false,
    gas: 29000000,
    inputs: [
      {
        type: "bytes32",
        name: "requestId",
      },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "estimateCost",
    constant: true,
    stateMutability: "view",
    payable: false,
    gas: 29000000,
    inputs: [
      {
        type: "tuple",
        name: "req",
        components: [
          {
            type: "uint8",
            name: "codeLocation",
          },
          {
            type: "uint8",
            name: "secretsLocation",
          },
          {
            type: "uint8",
            name: "language",
          },
          {
            type: "string",
            name: "source",
          },
          {
            type: "bytes",
            name: "secrets",
          },
          {
            type: "string[]",
            name: "args",
          },
        ],
      },
      {
        type: "uint64",
        name: "subscriptionId",
      },
      {
        type: "uint32",
        name: "gasLimit",
      },
      {
        type: "uint256",
        name: "gasPrice",
      },
    ],
    outputs: [
      {
        type: "uint96",
      },
    ],
  },
  {
    type: "function",
    name: "fundManager",
    constant: true,
    stateMutability: "view",
    payable: false,
    gas: 29000000,
    inputs: [],
    outputs: [
      {
        type: "address",
      },
    ],
  },
  {
    type: "function",
    name: "getDONPublicKey",
    constant: true,
    stateMutability: "view",
    payable: false,
    gas: 29000000,
    inputs: [],
    outputs: [
      {
        type: "bytes",
      },
    ],
  },
  {
    type: "function",
    name: "getInsuranceQuotes",
    constant: false,
    payable: false,
    gas: 29000000,
    inputs: [
      {
        type: "uint256",
        name: "landId",
      },
      {
        type: "uint256",
        name: "coverageTill",
      },
      {
        type: "uint256",
        name: "coverage",
      },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "handleOracleFulfillment",
    constant: false,
    payable: false,
    gas: 29000000,
    inputs: [
      {
        type: "bytes32",
        name: "requestId",
      },
      {
        type: "bytes",
        name: "response",
      },
      {
        type: "bytes",
        name: "err",
      },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "insuranceHistory",
    constant: true,
    stateMutability: "view",
    payable: false,
    gas: 29000000,
    inputs: [
      {
        type: "uint256",
      },
      {
        type: "uint256",
      },
    ],
    outputs: [
      {
        type: "bytes32",
      },
    ],
  },
  {
    type: "function",
    name: "insurancePremiumCalculatorCode",
    constant: true,
    stateMutability: "view",
    payable: false,
    gas: 29000000,
    inputs: [],
    outputs: [
      {
        type: "string",
      },
    ],
  },
  {
    type: "function",
    name: "landsContract",
    constant: true,
    stateMutability: "view",
    payable: false,
    gas: 29000000,
    inputs: [],
    outputs: [
      {
        type: "address",
      },
    ],
  },
  {
    type: "function",
    name: "owner",
    constant: true,
    stateMutability: "view",
    payable: false,
    gas: 29000000,
    inputs: [],
    outputs: [
      {
        type: "address",
      },
    ],
  },
  {
    type: "function",
    name: "quoteRequests",
    constant: true,
    stateMutability: "view",
    payable: false,
    gas: 29000000,
    inputs: [
      {
        type: "bytes32",
      },
    ],
    outputs: [
      {
        type: "bytes32",
        name: "requestId",
      },
      {
        type: "address",
        name: "owner",
      },
      {
        type: "uint256",
        name: "landId",
      },
      {
        type: "uint256",
        name: "premium",
      },
      {
        type: "uint256",
        name: "coverage",
      },
      {
        type: "uint256",
        name: "cropId",
      },
      {
        type: "uint256",
        name: "insuranceFrom",
      },
      {
        type: "uint256",
        name: "insuranceTo",
      },
      {
        type: "bool",
        name: "isRequestFulfilled",
      },
      {
        type: "bytes",
        name: "latestResponse",
      },
      {
        type: "bytes",
        name: "latestError",
      },
      {
        type: "bool",
        name: "isInsured",
      },
      {
        type: "bool",
        name: "isInsuranceClaimed",
      },
    ],
  },
  {
    type: "function",
    name: "requestTypes",
    constant: true,
    stateMutability: "view",
    payable: false,
    gas: 29000000,
    inputs: [
      {
        type: "bytes32",
      },
    ],
    outputs: [
      {
        type: "uint8",
      },
    ],
  },
  {
    type: "function",
    name: "secrets",
    constant: true,
    stateMutability: "view",
    payable: false,
    gas: 29000000,
    inputs: [],
    outputs: [
      {
        type: "bytes",
      },
    ],
  },
  {
    type: "function",
    name: "setChainlinkFunctionGasLimit",
    constant: false,
    payable: false,
    gas: 29000000,
    inputs: [
      {
        type: "uint32",
        name: "_chainlinkFunctionGasLimit",
      },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "setChainlinkSubscriptionId",
    constant: false,
    payable: false,
    gas: 29000000,
    inputs: [
      {
        type: "uint64",
        name: "_chainlinkSubscriptionId",
      },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "setInsurancePremiumCalculatorCode",
    constant: false,
    payable: false,
    gas: 29000000,
    inputs: [
      {
        type: "string",
        name: "_insurancePremiumCalculatorCode",
      },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "setSecrets",
    constant: false,
    payable: false,
    gas: 29000000,
    inputs: [
      {
        type: "bytes",
        name: "_secrets",
      },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "totalInsurances",
    constant: true,
    stateMutability: "view",
    payable: false,
    gas: 29000000,
    inputs: [
      {
        type: "uint256",
      },
    ],
    outputs: [
      {
        type: "uint256",
      },
    ],
  },
  {
    type: "function",
    name: "transferOwnership",
    constant: false,
    payable: false,
    gas: 29000000,
    inputs: [
      {
        type: "address",
        name: "to",
      },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "updateOracleAddress",
    constant: false,
    payable: false,
    gas: 29000000,
    inputs: [
      {
        type: "address",
        name: "oracle",
      },
    ],
    outputs: [],
  },
] as const;

export class InsuranceManager__factory {
  static readonly abi = _abi;
  static createInterface(): InsuranceManagerInterface {
    return new utils.Interface(_abi) as InsuranceManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InsuranceManager {
    return new Contract(address, _abi, signerOrProvider) as InsuranceManager;
  }
}
